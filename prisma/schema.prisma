// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  polls         Poll[]
  Votes         Votes[]
}

model Poll {
  id          String        @id @default(cuid())
  title       String
  description String?
  author      User          @relation(fields: [userId], references: [id])
  userId      String
  pollOptions PollOptions[]
  votes       Votes[]
  isClosed    Boolean       @default(false)
  isPublic    Boolean       @default(false)
}

model PollOptions {
  id     String  @id @default(cuid())
  text   String
  poll   Poll    @relation(fields: [pollId], references: [id])
  pollId String
  votes  Votes[]
}

model Votes {
  id           Int         @id @default(autoincrement())
  voterId      User        @relation(fields: [userId], references: [id])
  option       PollOptions @relation(fields: [pollOptionId], references: [id])
  pollOptionId String
  createdAt    DateTime    @default(now())
  userId       String
  Poll         Poll?       @relation(fields: [pollId], references: [id])
  pollId       String?

  @@unique([userId, pollOptionId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
